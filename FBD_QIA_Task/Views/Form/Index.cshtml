@model IEnumerable<FBD_QIA_Task.Models.FormViewModels.FormViewModel>
@{
    ViewData["Title"] = "Forms List";
}

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="bi bi-check-circle-fill"></i> @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="card">
    <div class="card-header">
        <h4> <i class="bi bi-tags-fill"></i>  History</h4>
    </div>

    <div class="card-body">
        <a asp-action="Create" class="btn btn-primary btn-sm">Create New</a>

        <table id="formsTable" class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Title</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @{
                    int i = 1;
                    foreach (var f in Model)
                    {
                        <tr>
                            <td>@i</td>
                            <td>@f.Title</td>
                            <td>
                                <a asp-action="Preview" asp-route-id="@f.FormId" class="btn btn-sm btn-primary">Preview</a>
                            </td>
                        </tr>
                        i++;
                    }
                }
            </tbody>
        </table>
    </div>
</div>





@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
@* Optional: initialize DataTables for server-side paging later *@
    <script>
        $(function() {
            // For small datasets you can use DataTables client-side.
            // For production with many rows use server-side processing (AJAX).
            // $('#formsTable').DataTable();
        });
    </script>
}